
    @namespace(uri="http://yamtl.github.io/ecommerce", prefix="ecommerce")
    package root;
    


@dependency
abstract class OrderStatus {
}
    
package org {

package springframework {

package http {

@dependency
abstract class ResponseEntity {
}
    
}
}
}
package java {

package util {

@dependency
abstract class Date {
}
    
@dependency
abstract class Map {
}
    
@dependency
abstract class List {
}
    
@dependency
abstract class Optional {
}
    
}
}
package com {

package metsoft {

package ecommerce {

class EcommerceApplication {
    op void main(EString[0..*] args);
}
    
package repository {

abstract interface OrderRepository {
}
    
abstract interface CategoryRepository {
}
    
abstract interface ProductRepository {
}
    
}
package api {

package mutation {

class ProductMutationResolver {
    ref com.metsoft.ecommerce.repository.ProductRepository[0..1] productRepository;
    op com.metsoft.ecommerce.model.Product[0..1] saveProduct(com.metsoft.ecommerce.model.Product[0..1] product);
    op com.metsoft.ecommerce.model.Product[0..1] updateProduct(com.metsoft.ecommerce.model.Product[0..1] product);
    op String[0..1] deleteProduct(int[0..1] ~id);
}
    
}
package controller {

class OrdersController {
    ref com.metsoft.ecommerce.repository.OrderRepository[0..1] orderRepository;
    op java.util.List[0..*] getAll();
}
    
class CategoriesController {
    ref com.metsoft.ecommerce.repository.CategoryRepository[0..1] categoryRepository;
    op java.util.List[0..*] getCategories();
    op org.springframework.http.ResponseEntity[0..1] getCategoryById(int[0..1] ~id);
    op org.springframework.http.ResponseEntity[0..1] saveCategory(com.metsoft.ecommerce.model.Category[0..1] category);
    op org.springframework.http.ResponseEntity[0..1] updateCategory(com.metsoft.ecommerce.model.Category[0..1] category);
    op org.springframework.http.ResponseEntity[0..1] deleteCategory(com.metsoft.ecommerce.model.Category[0..1] category);
}
    
}
package query {

class ProductQueryResolver extends com.coxautodev.graphql.tools.GraphQLQueryResolver {
    ref com.metsoft.ecommerce.repository.ProductRepository[0..1] productRepository;
    op java.util.List[0..*] getProducts();
    op java.util.Optional[0..1] getProductById(int[0..1] ~id);
}
    
}
}
package model {

class Category {
    attr int[0..1] ~id;
    attr EString[0..1] categoryName;
    val Product[0..*] products;
}
    
class Order {
    attr int[0..1] ~id;
    ref Product[0..*]#orderItems products;
    ref java.util.Map[0..*] productQuantities;
    ref java.util.Date[0..1] creationDate;
    ref OrderStatus[0..1] status;
    op void setCreationDate(java.util.Date[0..1] date);
}
    
class Product {
    attr int[0..1] ~id;
    attr EString[0..1] productName;
    attr EString[0..1] description;
    attr double[0..1] price;
    ref Category[0..1] category;
    ref Order[0..*]#products orderItems;
    ref java.util.Date[0..1] createDate;
}
    
enum OrderStatus {
	NEW;
	PROCESSING;
	SHIPPED;
	DELIVERED;

}
}
}
}
package coxautodev {

package graphql {

package tools {

@dependency
abstract interface GraphQLQueryResolver {
}
    
}
}
}
}
